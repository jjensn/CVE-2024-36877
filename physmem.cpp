#include "globals.hpp"

NTSTATUS
PhysicalMemory::Initialize(
)
{
    static const UNICODE_STRING deviceName =
        RTL_CONSTANT_STRING(L"\\Device\\PhysicalMemory");
    static const OBJECT_ATTRIBUTES attributes =
        RTL_CONSTANT_OBJECT_ATTRIBUTES(&deviceName,
            OBJ_CASE_INSENSITIVE | OBJ_KERNEL_HANDLE);
    NTSTATUS status;
    HANDLE sectionHandle;

    status = ZwOpenSection(&sectionHandle,
        SECTION_ALL_ACCESS,
        const_cast<POBJECT_ATTRIBUTES>(&attributes));
    if (!NT_SUCCESS(status))
    {
        DbgPrint("ZwOpenSection failed : %08x", status);
        goto Exit;
    }

    m_SectionHandle = sectionHandle;

Exit:
    return status;
}

NTSTATUS
PhysicalMemory::Read(
    PVOID Buffer,
    ULONG64 SourceAddress,
    SIZE_T BytesToRead
) const
{
    return Copy(SourceAddress, Buffer, BytesToRead, OPERATION_TYPE::Read);
}

NTSTATUS
PhysicalMemory::Write(
    ULONG64 DestinationAddress,
    PVOID Buffer,
    SIZE_T BytesToWrite
) const
{
    return Copy(DestinationAddress, Buffer, BytesToWrite, OPERATION_TYPE::Write);
}

PhysicalMemory::~PhysicalMemory(
)
{
    if (m_SectionHandle != nullptr)
    {
        ZwClose(m_SectionHandle);
    }
}

NTSTATUS
PhysicalMemory::Copy(
    ULONG64 AddressToMap,
    PVOID Buffer,
    SIZE_T BytesToCopy,
    OPERATION_TYPE Operation
) const
{
    NTSTATUS status;
    PVOID virtualAddress;
    LARGE_INTEGER physicalAddress;
    SIZE_T viewSize;

    virtualAddress = nullptr;

    viewSize = BytesToCopy;
    physicalAddress.QuadPart = AddressToMap;
    status = ZwMapViewOfSection(m_SectionHandle,
        ZwCurrentProcess(),
        &virtualAddress,
        0,
        BytesToCopy,
        &physicalAddress,
        &viewSize,
        ViewUnmap,
        0,
        PAGE_READWRITE);
    if (!NT_SUCCESS(status))
    {
        DbgPrint("ZwMapViewOfSection failed for 0x%llx : %08x", AddressToMap, status);
        goto Exit;
    }

    __try
    {
        if (Operation == OPERATION_TYPE::Read)
        {
            RtlCopyMemory(Buffer, Add2Ptr(virtualAddress, (AddressToMap & 0xfff)), BytesToCopy);
        }
        else
        {
            RtlCopyMemory(Add2Ptr(virtualAddress, (AddressToMap & 0xfff)), Buffer, BytesToCopy);
        }
    }
    __except (EXCEPTION_EXECUTE_HANDLER)
    {
        status = GetExceptionCode();

        //
        // Noisy for the current use. Ignore.
        //
        //DEMO_ERROR("Exception occurred with 0x%llx : %08x", AddressToMap, status);
        goto Exit;
    }

Exit:
    if (virtualAddress != nullptr)
    {
        ZwUnmapViewOfSection(ZwCurrentProcess(), virtualAddress);
    }
    return status;
}
